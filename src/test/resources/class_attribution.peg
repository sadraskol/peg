import org.peg.String

record Lesson(subject: Subject, teacher: Teacher, studentGroup: StudentGroup) {
    injective relation slot: Slot
    injective relation room: Room
}
record StudentGroup(identity name: String) {}
record Teacher(identity name: String) {}
record Subject(identity name: String) {}
record Room(identity name: String) {}
record Slot(identity day: String, identity start: LocalTime, identity end: LocalTime) {}

facts {
    Room = { "Room A", "Room B", "Room C" }
    Slot = {
        ("Monday", (8, 30), (9, 30)),
        ("Monday", (9, 30), (10, 30)),
        ("Monday", (13, 30), (14, 30)),
        ("Monday", (10, 30), (11, 30)),
        ("Monday", (14, 30), (15, 30)),

        ("Tuesday", (8, 30), (9, 30)),
        ("Tuesday", (9, 30), (10, 30)),
        ("Tuesday", (10, 30), (11, 30)),
        ("Tuesday", (13, 30), (14, 30)),
        ("Tuesday", (14, 30), (15, 30)),
    }
    Lesson = {
        ("Math", "A. Turing", "9th grade"),
        ("Math", "A. Turing", "9th grade"),
        ("Physics", "M. Curie", "9th grade"),
        ("Chemistry", "M. Curie", "9th grade"),
        ("Biology", "C. Darwin", "9th grade"),
        ("History", "I. Jones", "9th grade"),
        ("English", "I. Jones", "9th grade"),
        ("English", "I. Jones", "9th grade"),
        ("Spanish", "P. Cruz", "9th grade"),
        ("Spanish", "P. Cruz", "9th grade"),

        ("Math", "A. Turing", "10th grade"),
        ("Math", "A. Turing", "10th grade"),
        ("Math", "A. Turing", "10th grade"),
        ("Physics", "M. Curie", "10th grade"),
        ("Chemistry", "M. Curie", "10th grade"),
        ("French", "M. Curie", "10th grade"),
        ("Geography", "C. Darwin", "10th grade"),
        ("History", "I. Jones", "10th grade"),
        ("English", "P. Cruz", "10th grade"),
        ("Spanish", "P. Cruz", "10th grade"),
    }
}

constraint {
    forall l1, l2 in Lesson:
        (l1 != l2 and l1.slot == l2.slot) implies
            (l1.room != l2.room and l1.teacher != l2.teacher and l1.studentGroup != l2.studentGroup)
}
// (not (l1 != l2 and l2.slot == l2.slot)) or (l1.room != l2.room and l1.teacher != l2.teacher and l1.studentGroup != l2.studentGroup)
// not (l1 != l2) OR l1.slot == l2.slot) or (l1.room != l2.room and l1.teacher != l2.teacher and l1.studentGroup != l2.studentGroup)

// for all l1 in lesson:
// for all l2 in lesson:
// /\ (not (l1 != l2) or l1.slot == l2.slot) or l1.room != l2.room)
// /\ (not (l1 != l2) or l1.slot == l2.slot) or l1.teacher != l2.teacher)
// /\ (not (l1 != l2) or l1.slot == l2.slot) or l1.studentGroup != l2.studentGroup)